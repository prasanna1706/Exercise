Looking for git in: git
Using git 2.17.1 from git
> git rev-parse --show-toplevel
> git config --get commit.template
Open repository: /home/prasanna/Documents/prasanna
> git status -z -u
> git symbolic-ref --short HEAD
> git rev-parse master
> git rev-parse --symbolic-full-name master@{u}
fatal: no upstream configured for branch 'master'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git check-ignore -v -z --stdin
> git show :exe2.js
> git ls-files --stage -- ./
> git show :exe3.html
> git show :exe2.js
> git ls-files --stage -- ./
> git show :exe3.html
> git check-ignore -v -z --stdin
> git show :exe2.js
> git ls-files --stage -- ./
> git show :exe3.html
> git show :exe2.js
> git ls-files --stage -- ./
> git check-ignore -v -z --stdin
> git show :exe3.html
> git show :exe2.js
> git ls-files --stage -- ./
> git rev-parse --show-toplevel
> git config --get commit.template
Open repository: /home/prasanna
> git status -z -u
> git show :Desktop/exe3.js
> git ls-files --stage -- Desktop/
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git symbolic-ref --short HEAD
> git rev-parse master
fatal: ambiguous argument 'master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
> git for-each-ref --format %(refname) %(objectname) --sort -committerdate
> git remote --verbose
> git show :exe2.js
> git ls-files --stage -- ./
> git show :Desktop/exe3.js
> git ls-files --stage -- Desktop/
> git show :exe2.js
> git ls-files --stage -- ./
> git show :Desktop/exe3.js
> git ls-files --stage -- Desktop/
> git show :exe2.js
> git ls-files --stage -- ./
